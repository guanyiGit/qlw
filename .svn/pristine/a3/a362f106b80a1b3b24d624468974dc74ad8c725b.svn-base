<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:util="http://www.springframework.org/schema/util"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/mvc
		http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/task
		http://www.springframework.org/schema/task/spring-task-4.2.xsd
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-3.2.xsd">


	<!-- 会话Session ID生成器 -->
	<bean id="sessionIdGenerator"
		class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator" />

	<!-- 会话Cookie模板 -->
	<bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
		<!--cookie的name，我故意取名叫xxxxbaidu -->
		<constructor-arg value="dog-cookie" />
		<property name="httpOnly" value="true" />
		<!--cookie的有效时间 -->
		<property name="maxAge" value="-1" />
	</bean>
	<!-- 会话验证调度器 -->
	<bean id="sessionValidationScheduler"
		class="org.apache.shiro.session.mgt.ExecutorServiceSessionValidationScheduler">
		<property name="sessionManager" ref="sessionManager" />
		<!-- 间隔多少时间检查，不配置是60分钟 -->
		<property name="interval" value="360000" />
	</bean>

	<!-- 1.配置WebRealm -->
	<bean id="WebRealm" class="com.soholy.dogmanager.shiro.realm.WebRealm">
		<property name="credentialsMatcher">
			<bean class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
				<property name="hashAlgorithmName" value="MD5"></property>
				<property name="hashIterations" value="1"></property>
			</bean>
		</property>
		<!--启用缓存，默认关闭 -->
		<property name="cachingEnabled" value="true" />
		
		<!--启用身份验证缓存，即缓存AuthenticationInfo，默认false -->
		<property name="authenticationCachingEnabled" value="false"/>
		<!-- 缓存AuthenticationInfo信息的缓存名称 -->
	    <property name="authenticationCacheName" value="AuthenticationInfo"/>
		
		<!--启用授权缓存，即缓存AuthorizationInfo的信息，默认为true -->
		<property name="authorizationCachingEnabled" value="true" />
		<property name="authorizationCacheName" value="AuthorizationInfo"></property>
	</bean>


	<!--2.配置认证策略 -->
	<bean id="authenticator" class="org.apache.shiro.authc.pam.ModularRealmAuthenticator">
		<property name="authenticationStrategy">
			<bean class="org.apache.shiro.authc.pam.AtLeastOneSuccessfulStrategy"></bean>
		</property>
	</bean> 

	<!--3.shiro缓存管理器 使用redis -->
	<bean id="redisCacheManager" class="com.soholy.dogmanager.shiro.cache.RedisCacheManager">
		<property name="redisManager" ref="redisManager"></property>
		<property name="principalIdFieldName" value="username"></property>
	</bean>
	
	<!--nativeEhCacheManager缓存管理器 -->
	<bean name="nativeEhCacheManager" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
		<property name="configLocation" value="classpath:conf/ehcache.xml"></property>
		<property name="shared" value="true"></property>
	</bean>
	
	<!--shiro-chcache缓存管理器 -->
	<bean name="shiroEhCacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
		<property name="cacheManager" ref="nativeEhCacheManager" />
	</bean>
	
	<bean id="sessionDao" class="com.soholy.dogmanager.shiro.session.RedisSessionDao" >
		<property name="redisManager" ref="redisManager"/>
	</bean>
	
	<bean id="localSessionDAO" class="com.soholy.dogmanager.shiro.session.LocalRedisSessionDAO">
	    <property name="redisSessionDao" ref="sessionDao"></property>
	    <property name="cacheManager" ref="shiroEhCacheManager" />
	    <property name="activeSessionsCacheName" value="shiroSessionCache"/>
	 </bean>
	
	<!--4. 会话管理器 -->
	<bean id="sessionManager"
		class="com.soholy.dogmanager.shiro.session.StatelessSessionManager">
		<!-- 配置sesionDao -->
		<property name="sessionDAO"  ref="localSessionDAO" />
		<!-- 配置本地内存ehcache -->
		<property name="cacheManager" ref="shiroEhCacheManager"></property>
		<!--删除在session过期时跳转页面时自动在URL中添加JSESSIONID -->
		<!--<property name="sessionIdUrlRewritingEnabled" value="false" />-->
		<!-- 加载session监听 -->
		<property name="sessionListeners" ref="sessionListenerImpl" />
		
		<property name="sessionIdCookie" ref="sessionIdCookie" />
		<!-- 设置超时时间 -->
		<property name="globalSessionTimeout" value="172800000" />
		<!--<property name="globalSessionTimeout" value="60000" />-->
		<property name="deleteInvalidSessions" value="true" />
		<property name="sessionValidationSchedulerEnabled" value="true" />
		<property name="sessionIdCookieEnabled" value="true" />
	</bean>

	<bean id="sessionListenerImpl" class="com.soholy.dogmanager.shiro.session.SessionListenerImpl" />

	<!--注册安全管理器对象-->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<!-- 缓存管理器  -->
		<property name="cacheManager" ref="redisCacheManager" />
		<property name="sessionManager" ref="sessionManager" />
		<property name="realm" ref="WebRealm" />
	</bean>

	<!--保证实现了Shiro内部lifecycle函数的bean执行 -->
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />

	<!--5. 启用 IOC 容器中使用 shiro 的注解. 但必须在配置了 LifecycleBeanPostProcessor 之后才可以使用. -->
	<bean
		class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
		depends-on="lifecycleBeanPostProcessor">
		<property name="proxyTargetClass" value="true" />
	</bean>

	<!--  配置shiro框架提供的切面类，用于创建代理对象 -->
	<bean
		class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<property name="securityManager" ref="securityManager" />
	</bean>
	
	<!-- 并发登录控制 -->
	<bean id="kickoutSessionControlFilter" class="com.soholy.dogmanager.shiro.filter.KickoutSessionControlFilter">
		 <property name="cacheManager" ref="redisCacheManager" />
		 <property name="sessionManager" ref="sessionManager"/>
         <property name="kickoutAfter" value="false"/>
         <property name="maxSession" value="1"/>
         <property name="kickoutUrl" value="/biz/login"/>
	</bean>
	
	<!-- <bean id="logoutFilter" class="org.apache.shiro.web.filter.authc.LogoutFilter">
		<property name="redirectUrl" value="/static/views/login/login" />
	</bean> -->

	<!-- 配置shiro框架的过滤器工厂对象(会默认提供内置过滤器) -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<!-- 注入安全管理器对象 -->
		<property name="securityManager" ref="securityManager" />
		<!-- 注入相关页面访问URL -->
		<property name="loginUrl" value="/biz/login" />
		
		<property name="unauthorizedUrl" value="/biz/unauth" />
		
		<property name="filters">
			<map>
				<entry key="kickout" value-ref="kickoutSessionControlFilter" />
			</map>
		</property>
		<property name="filterChainDefinitions">
			<value>
				<!--basic-->
				/biz/getUSerInfo = anon
				/biz/resource/getResources = anon
				<!--字典表-->
				/biz/Tdictionary/card_type = anon
				/biz/reservation = anon
				<!--办犬证-->
				/biz/dogCard/viewDogAllInfo = anon
				/biz/dogCard/insertDogCard = anon
				/biz/dogCard/handle/checkd = anon
				<!--图片上传-->
				/biz/fileManager/** = anon
				<!-- iot -->
				/callback/** = anon
				<!-- 资讯 -->
				/biz/information/getInformation = anon
				/biz/information/getInformations = anon
				/biz/information/list = anon
				/biz/information/detail/** = anon
				<!-- 爱心领养 -->
				/biz/adoption/findPublishingList = anon
				/biz/collection/findAdoptionsList = anon
				/biz/collection/findCollectionList = anon   
				/biz/adoption/apply = anon
				/biz/collection/findOne = anon
				/biz/adoption/selectdogPro=anon
				<!-- 禁养犬种 -->
				/biz/dogAndOwner/selectDogBanList = anon
				/biz/ban/findAll = anon
				<!-- 服务网点 -->
				/biz/serviceSite/searchPosition = anon
				/biz/serviceSite/add = anon
				/biz/serviceSite/add1 = anon
				/biz/serviceSite/selectPetHCardIds = anon
				/biz/serviceSite/getServiceSites = anon
				/biz/serviceSite/getServiceSite = anon
				/biz/serviceSite/getServiceSitesPage = anon
				/biz/fileManager/uploadFileBatch=anon
				/biz/reservation/type = anon
				/biz/serviceSite/getServiceSitesforAdmin=anon
				/biz/Tdictionary/biz_type=anon
				<!--txy  -->
				/biz/dogInfo/getHospital=anon
				<!-- 预约 -->
				 /biz/reservation/add = anon
				/biz/serviceSite/getNearbyServiceSites = anon
				<!-- 禁养犬种 -->
				 /biz/dogAndOwner/selectDogBanList = anon
				<!-- 爱心领养 -->
				/biz/adoption/selectdogPro = anon
				/biz/collection/findAdoptionsList = anon
				/biz/adoption/getCode = anon
				/biz/adoption/apply = anon
				<!-- /static/views/dog/lovingAdoption.html = anon
				/static/views/dog/lovingAdoption.js = anon -->
				<!-- 静态资源放行 -->
				/excel/** = anon
				<!-- /static/views/headPage/** = anon
				/static/views/homePage/homePage.html = anon
				/static/views/homePage/visitorHomePage.js = anon				
				 -->
				/static/** =anon
				<!-- 登录资源 -->
				/biz/dogAndOwner/getCode = anon
				/biz/login = anon
				/biz/checkLogin = anon
				/biz/getToken =anon
				/biz/user/selectUserByUserName/** = anon
				/biz/user/retrievePwd/** = anon

				/biz/dogCard/selectDogCardInfoByImeis = anon
				<!--oauth2-->
				/biz/server/** = anon

				<!-- /biz/logout = logout -->
				/**=kickout,authc
				<!--/**=anon-->
			</value>
		</property>
	</bean>
</beans>