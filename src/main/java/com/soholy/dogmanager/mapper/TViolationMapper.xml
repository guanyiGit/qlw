<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.soholy.dogmanager.mapper.TViolationMapper" >
  <resultMap id="BaseResultMap" type="com.soholy.dogmanager.entity.TViolation" >
    <id column="violation_id" property="violationId" jdbcType="BIGINT" />
    <result column="violation_type" property="violationType" jdbcType="INTEGER" />
    <result column="org_id" property="orgId" jdbcType="BIGINT" />
    <result column="dog_id" property="dogId" jdbcType="BIGINT" />
    <result column="dog_owner_id" property="dogOwnerId" jdbcType="BIGINT" />
    <result column="violation_date" property="violationDate" jdbcType="TIMESTAMP" />
    <result column="district_id" property="districtId" jdbcType="INTEGER" />
    <result column="violation_place" property="violationPlace" jdbcType="VARCHAR" />
    <result column="operator_id" property="operatorId" jdbcType="BIGINT" />
    <result column="creation_time" property="creationTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.soholy.dogmanager.entity.TViolation" extends="BaseResultMap" >
    <result column="remarks" property="remarks" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    violation_id, violation_type, org_id, dog_id, dog_owner_id, violation_date, district_id, 
    violation_place, operator_id, creation_time
  </sql>
  <sql id="Blob_Column_List" >
    remarks
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.soholy.dogmanager.entity.TViolationExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_violation
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.soholy.dogmanager.entity.TViolationExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_violation
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_violation
    where violation_id = #{violationId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from t_violation
    where violation_id = #{violationId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.soholy.dogmanager.entity.TViolationExample" >
    delete from t_violation
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.soholy.dogmanager.entity.TViolation" >
    insert into t_violation (violation_id, violation_type, org_id, 
      dog_id, dog_owner_id, violation_date, 
      district_id, violation_place, operator_id, 
      creation_time, remarks)
    values (#{violationId,jdbcType=BIGINT}, #{violationType,jdbcType=INTEGER}, #{orgId,jdbcType=BIGINT}, 
      #{dogId,jdbcType=BIGINT}, #{dogOwnerId,jdbcType=BIGINT}, #{violationDate,jdbcType=TIMESTAMP}, 
      #{districtId,jdbcType=INTEGER}, #{violationPlace,jdbcType=VARCHAR}, #{operatorId,jdbcType=BIGINT}, 
      #{creationTime,jdbcType=TIMESTAMP}, #{remarks,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.soholy.dogmanager.entity.TViolation" >
    insert into t_violation
    	<selectKey resultType ="java.lang.Long" keyProperty= "violationId"
                   order= "AFTER">
                 SELECT LAST_INSERT_ID()
     	</selectKey >
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="violationId != null" >
        violation_id,
      </if>
      <if test="violationType != null" >
        violation_type,
      </if>
      <if test="orgId != null" >
        org_id,
      </if>
      <if test="dogId != null" >
        dog_id,
      </if>
      <if test="dogOwnerId != null" >
        dog_owner_id,
      </if>
      <if test="violationDate != null" >
        violation_date,
      </if>
      <if test="districtId != null" >
        district_id,
      </if>
      <if test="violationPlace != null" >
        violation_place,
      </if>
      <if test="operatorId != null" >
        operator_id,
      </if>
      <if test="creationTime != null" >
        creation_time,
      </if>
      <if test="remarks != null" >
        remarks,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="violationId != null" >
        #{violationId,jdbcType=BIGINT},
      </if>
      <if test="violationType != null" >
        #{violationType,jdbcType=INTEGER},
      </if>
      <if test="orgId != null" >
        #{orgId,jdbcType=BIGINT},
      </if>
      <if test="dogId != null" >
        #{dogId,jdbcType=BIGINT},
      </if>
      <if test="dogOwnerId != null" >
        #{dogOwnerId,jdbcType=BIGINT},
      </if>
      <if test="violationDate != null" >
        #{violationDate,jdbcType=TIMESTAMP},
      </if>
      <if test="districtId != null" >
        #{districtId,jdbcType=INTEGER},
      </if>
      <if test="violationPlace != null" >
        #{violationPlace,jdbcType=VARCHAR},
      </if>
      <if test="operatorId != null" >
        #{operatorId,jdbcType=BIGINT},
      </if>
      <if test="creationTime != null" >
        #{creationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remarks != null" >
        #{remarks,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.soholy.dogmanager.entity.TViolationExample" resultType="java.lang.Integer" >
    select count(*) from t_violation
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_violation
    <set >
      <if test="record.violationId != null" >
        violation_id = #{record.violationId,jdbcType=BIGINT},
      </if>
      <if test="record.violationType != null" >
        violation_type = #{record.violationType,jdbcType=INTEGER},
      </if>
      <if test="record.orgId != null" >
        org_id = #{record.orgId,jdbcType=BIGINT},
      </if>
      <if test="record.dogId != null" >
        dog_id = #{record.dogId,jdbcType=BIGINT},
      </if>
      <if test="record.dogOwnerId != null" >
        dog_owner_id = #{record.dogOwnerId,jdbcType=BIGINT},
      </if>
      <if test="record.violationDate != null" >
        violation_date = #{record.violationDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.districtId != null" >
        district_id = #{record.districtId,jdbcType=INTEGER},
      </if>
      <if test="record.violationPlace != null" >
        violation_place = #{record.violationPlace,jdbcType=VARCHAR},
      </if>
      <if test="record.operatorId != null" >
        operator_id = #{record.operatorId,jdbcType=BIGINT},
      </if>
      <if test="record.creationTime != null" >
        creation_time = #{record.creationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.remarks != null" >
        remarks = #{record.remarks,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update t_violation
    set violation_id = #{record.violationId,jdbcType=BIGINT},
      violation_type = #{record.violationType,jdbcType=INTEGER},
      org_id = #{record.orgId,jdbcType=BIGINT},
      dog_id = #{record.dogId,jdbcType=BIGINT},
      dog_owner_id = #{record.dogOwnerId,jdbcType=BIGINT},
      violation_date = #{record.violationDate,jdbcType=TIMESTAMP},
      district_id = #{record.districtId,jdbcType=INTEGER},
      violation_place = #{record.violationPlace,jdbcType=VARCHAR},
      operator_id = #{record.operatorId,jdbcType=BIGINT},
      creation_time = #{record.creationTime,jdbcType=TIMESTAMP},
      remarks = #{record.remarks,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_violation
    set violation_id = #{record.violationId,jdbcType=BIGINT},
      violation_type = #{record.violationType,jdbcType=INTEGER},
      org_id = #{record.orgId,jdbcType=BIGINT},
      dog_id = #{record.dogId,jdbcType=BIGINT},
      dog_owner_id = #{record.dogOwnerId,jdbcType=BIGINT},
      violation_date = #{record.violationDate,jdbcType=TIMESTAMP},
      district_id = #{record.districtId,jdbcType=INTEGER},
      violation_place = #{record.violationPlace,jdbcType=VARCHAR},
      operator_id = #{record.operatorId,jdbcType=BIGINT},
      creation_time = #{record.creationTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.soholy.dogmanager.entity.TViolation" >
    update t_violation
    <set >
      <if test="violationType != null" >
        violation_type = #{violationType,jdbcType=INTEGER},
      </if>
      <if test="orgId != null" >
        org_id = #{orgId,jdbcType=BIGINT},
      </if>
      <if test="dogId != null" >
        dog_id = #{dogId,jdbcType=BIGINT},
      </if>
      <if test="dogOwnerId != null" >
        dog_owner_id = #{dogOwnerId,jdbcType=BIGINT},
      </if>
      <if test="violationDate != null" >
        violation_date = #{violationDate,jdbcType=TIMESTAMP},
      </if>
      <if test="districtId != null" >
        district_id = #{districtId,jdbcType=INTEGER},
      </if>
      <if test="violationPlace != null" >
        violation_place = #{violationPlace,jdbcType=VARCHAR},
      </if>
      <if test="operatorId != null" >
        operator_id = #{operatorId,jdbcType=BIGINT},
      </if>
      <if test="creationTime != null" >
        creation_time = #{creationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remarks != null" >
        remarks = #{remarks,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where violation_id = #{violationId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.soholy.dogmanager.entity.TViolation" >
    update t_violation
    set violation_type = #{violationType,jdbcType=INTEGER},
      org_id = #{orgId,jdbcType=BIGINT},
      dog_id = #{dogId,jdbcType=BIGINT},
      dog_owner_id = #{dogOwnerId,jdbcType=BIGINT},
      violation_date = #{violationDate,jdbcType=TIMESTAMP},
      district_id = #{districtId,jdbcType=INTEGER},
      violation_place = #{violationPlace,jdbcType=VARCHAR},
      operator_id = #{operatorId,jdbcType=BIGINT},
      creation_time = #{creationTime,jdbcType=TIMESTAMP},
      remarks = #{remarks,jdbcType=LONGVARCHAR}
    where violation_id = #{violationId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.soholy.dogmanager.entity.TViolation" >
    update t_violation
    set violation_type = #{violationType,jdbcType=INTEGER},
      org_id = #{orgId,jdbcType=BIGINT},
      dog_id = #{dogId,jdbcType=BIGINT},
      dog_owner_id = #{dogOwnerId,jdbcType=BIGINT},
      violation_date = #{violationDate,jdbcType=TIMESTAMP},
      district_id = #{districtId,jdbcType=INTEGER},
      violation_place = #{violationPlace,jdbcType=VARCHAR},
      operator_id = #{operatorId,jdbcType=BIGINT},
      creation_time = #{creationTime,jdbcType=TIMESTAMP}
    where violation_id = #{violationId,jdbcType=BIGINT}
  </update>
</mapper>